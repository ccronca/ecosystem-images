# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Opc < Formula
  desc "A CLI for OpenShift Pipeline"
  homepage "https://github.com/openshift-pipelines/opc"
  version "1.14.3"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.14.3/opc_1.14.3_darwin_x86_64.tar.gz"
      sha256 "d6cb42f47a1f4f573cf27d93de120389381a12fece959e8bd539c25ea1502fff"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.14.3/opc_1.14.3_darwin_arm64.tar.gz"
      sha256 "f4f980104dbcc4562c0dc98f02d543f659d3ffae0b3a77d67a815c7df3e9f89b"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.14.3/opc_1.14.3_linux_arm64.tar.gz"
      sha256 "f1185e96cef3f380f1c59ddd4ff31998fdc92a9cbc17ed152f69bd32569f3475"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.14.3/opc_1.14.3_linux_x86_64.tar.gz"
      sha256 "f9b96cb1fd96e0be773d9918438609529f077b5ed09748028ed7a3478d217fa1"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
  end
end
