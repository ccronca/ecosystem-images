# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Opc < Formula
  desc "A CLI for OpenShift Pipeline"
  homepage "https://github.com/openshift-pipelines/opc"
  version "1.14.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.14.0/opc_1.14.0_darwin_arm64.tar.gz"
      sha256 "64352d29d33c802b484993e18684453d859f27d257ab4a74f319c3dd6446d5d3"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.14.0/opc_1.14.0_darwin_x86_64.tar.gz"
      sha256 "3a6db4f978c4c2cc036c7f83a8b0e4e15a4afb4afb4f1c3bb073c5ac20b3a8a7"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.14.0/opc_1.14.0_linux_arm64.tar.gz"
      sha256 "093998eb1dde9454ca485a02ae93e6189b557f5265c5ab5e82e095c73268f45c"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.14.0/opc_1.14.0_linux_x86_64.tar.gz"
      sha256 "8a30f275a1cab2082290b51d87648e6681d7356af5783641e5860522c2911327"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
  end
end
